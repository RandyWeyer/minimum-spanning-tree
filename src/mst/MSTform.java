/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mst;

import java.awt.Color;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.JPanel;
import javax.swing.*;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Line2D;
import java.awt.geom.*;
import java.awt.color.ColorSpace;
import java.util.ArrayList;
import java.util.List;
import java.lang.Object;

/**
 *
 * @author Randy_000
 */
public class MSTform extends javax.swing.JFrame {

    /**
     * Creates new form MSTform
     */
    public MSTform() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setMinimumSize(new java.awt.Dimension(10, 10));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton2.setText("Add 100 pts.");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jToggleButton1.setText("Toggle Rotate");

        jButton1.setText("Add 10 pts.");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(10);
        jTextArea1.setRows(5);
        jTextArea1.setName("jDisplayPoints"); // NOI18N
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("X:");

        jLabel2.setText("Y:");

        jTextField1.setEditable(false);

        jButton3.setText("Minimum Spanning Tree");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jButton4.setText("Add 1000 pts.");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jButton5.setText("Find Midpoint");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Clear all pts.");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton6MousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(41, 41, 41)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 125, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(19, 19, 19))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 93, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jToggleButton1)
                    .addComponent(jButton1)
                    .addComponent(jButton4)
                    .addComponent(jButton6))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked

    }//GEN-LAST:event_jPanel1MouseClicked

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed

        int customerX = evt.getX();
        int customerY = evt.getY();
        int customerCount = 2;

        Graphics g = jPanel1.getGraphics();
        g.setColor(Color.red);
        g.fillOval(customerX+2, customerY+2, 5, 5);
        jPanel1.paintComponents(g);

        Customer.allCustomers.add(new Customer(customerX, customerY, customerCount));

//TEMP to see if constructor works
//IT WORKS!
//        jTextArea1.setText("");
//
//        
//        
//        for (int i =0; i < Customer.allCustomers.size(); i++) {
//
//            jTextArea1.append("["+Customer.allCustomers.get(i).getCustomerX());
//            jTextArea1.append(", " +Customer.allCustomers.get(i).getCustomerY());
//            jTextArea1.append(", " +Customer.allCustomers.get(i).getCustomerCount() + "]\n");
//        
//        }
//This actually works now. Had the wrong name before
//Commenting out so I can see if the constructor works
        jTextArea1.append("[" + customerX + ", " + customerY + "]\n");
    }//GEN-LAST:event_jPanel1MousePressed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked

        for (int i = 0; i < 10; i++) {
            int customerX = 0 + (int) (Math.random() * ((658 - 0) + 1));
            int customerY = 0 + (int) (Math.random() * ((589 - 0) + 1));
            int customerCount = 2;
            Customer.allCustomers.add(new Customer(customerX, customerY, customerCount));

            Graphics g = jPanel1.getGraphics();
            g.setColor(Color.red);
            g.fillOval(customerX, customerY, 5, 5);
            jPanel1.paintComponents(g);

            Customer.allCustomers.add(new Customer(customerX, customerY, customerCount));

            jTextArea1.append("[" + customerX + ", " + customerY + "]\n");
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        for (int i = 0; i < 100; i++) {
            int customerX = 0 + (int) (Math.random() * ((658 - 0) + 1));
            int customerY = 0 + (int) (Math.random() * ((589 - 0) + 1));
            int customerCount = 2;
            Customer.allCustomers.add(new Customer(customerX, customerY, customerCount));

            Graphics g = jPanel1.getGraphics();
            g.setColor(Color.red);
            g.fillOval(customerX, customerY, 5, 5);
            jPanel1.paintComponents(g);

            Customer.allCustomers.add(new Customer(customerX, customerY, customerCount));

            jTextArea1.append("[" + customerX + ", " + customerY + "]\n");
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        for (int i = 0; i < 1000; i++) {
            int customerX = 0 + (int) (Math.random() * ((658 - 0) + 1));
            int customerY = 0 + (int) (Math.random() * ((589 - 0) + 1));
            int customerCount = 2;
            Customer.allCustomers.add(new Customer(customerX, customerY, customerCount));

            Graphics g = jPanel1.getGraphics();
            g.setColor(Color.red);
            g.fillOval(customerX, customerY, 5, 5);
            jPanel1.paintComponents(g);

            Customer.allCustomers.add(new Customer(customerX, customerY, customerCount));

            jTextArea1.append("[" + customerX + ", " + customerY + "]\n");
        }
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int midCustomerX = 0;
        int midCustomerY = 0;
        int midCounterX = 0;
        int midCounterY = 0;

        for (Customer temp : Customer.allCustomers) {
            Customer.allCustomers.get(WIDTH);
            midCustomerX += temp.getCustomerX();
            midCounterX++;
        }

        for (Customer temp : Customer.allCustomers) {
            Customer.allCustomers.get(WIDTH);
            midCustomerY += temp.getCustomerY();
            midCounterY++;
        }

        midCustomerX = midCustomerX / midCounterX;
        midCustomerY = midCustomerY / midCounterY;

        Graphics g = jPanel1.getGraphics();
        g.setColor(Color.blue);
        g.fillOval(midCustomerX, midCustomerY, 5, 5);
        jPanel1.paintComponents(g);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        int midCustomerX = 0;
        int midCustomerY = 0;
        int midCounterX = 0;
        int midCounterY = 0;

        for (Customer temp : Customer.allCustomers) {
            Customer.allCustomers.get(WIDTH);
            midCustomerX += temp.getCustomerX();
            midCounterX++;
        }

        for (Customer temp : Customer.allCustomers) {
            Customer.allCustomers.get(WIDTH);
            midCustomerY += temp.getCustomerY();
            midCounterY++;
        }

        midCustomerX = midCustomerX / midCounterX;
        midCustomerY = midCustomerY / midCounterY;

        Point midCustomer = new Point(midCustomerX, midCustomerY);

        //Draw midPoint
        Graphics g = jPanel1.getGraphics();
        g.setColor(Color.blue);
        g.fillOval(midCustomerX, midCustomerY, 5, 5);
        jPanel1.paintComponents(g);

        do {
            int maxDistance = 0;
            int maxPointDistance = 0;

            Point currentMaxPoint = new Point(midCustomerX, midCustomerY);

            for (Customer pt1 : Customer.allCustomers) {

                //Someone said ^2 is very slow, so go with 
                //distance = Math.sqrt((x1-x2)*(x1-x2) + (y1-y2)*(y1-y2));
                //... it's much faster when it actually compiles
                maxPointDistance = (int) Math.sqrt(((pt1.getCustomerX() - midCustomer.x)
                        * (pt1.getCustomerX() - midCustomer.x))
                        + ((pt1.getCustomerY() - midCustomer.y)
                        * (pt1.getCustomerY() - midCustomer.y)));

                if (maxDistance < maxPointDistance) {
                    maxDistance = maxPointDistance;
                    currentMaxPoint = new Point(pt1.getCustomerX(), pt1.getCustomerY());
                } else {
                    maxDistance = maxDistance;
                }

            }//maxpoint loop closed

            int minDistance = 1000;
            int minPointDistance = 1000;
            int minPointDistance2 = 1000;

            Point currentMinPoint1 = new Point(currentMaxPoint);

            for (Customer pt2 : Customer.allCustomers) {

                minPointDistance = (int) Math.sqrt(((pt2.getCustomerX() - currentMaxPoint.x)
                        * (pt2.getCustomerX() - currentMaxPoint.x))
                        + ((pt2.getCustomerY() - currentMaxPoint.y)
                        * (pt2.getCustomerY() - currentMaxPoint.y)));

                //may have to reevaluate the logic here.
                //Might not be possible to have 3 && statements for all cases
                if (minDistance != 0 && minPointDistance < minDistance && minPointDistance != 0) {
                    minDistance = minPointDistance;

                    currentMinPoint1 = new Point(pt2.getCustomerX(), pt2.getCustomerY());
                } else {
                    minDistance = minDistance;
                }

            }//end find max's min

            //drawLine--This is off-center because
            //of the rounding in the distance formula.
            //THIS IS WHERE I AM,
            //EVERYTHING ABOVE SHOULD WORK CORRECTLY,
            //MINUS THE DISTANCE FORMULA INACCURACY
            g.setColor(Color.black);
            g.drawLine(currentMaxPoint.x + 2, currentMaxPoint.y + 2,
                    currentMinPoint1.x + 2, currentMinPoint1.y + 2);
            jPanel1.paintComponents(g);

            for (Customer pt3 : Customer.allCustomers) {
                if ((pt3.getCustomerX() == currentMaxPoint.x)
                        && (pt3.getCustomerY() == currentMaxPoint.y)) {

                    //Reduce counter to be removed when it's 0
                    //this way each point should only have an in and out line
                    //Ends up making a pseudo-minimum spanning tree
                    //
                    Customer.allCustomers.remove(pt3);
                    break;
                } else {

                }
            }//End pt3 loop
            //Do while list is not empty
            //THIS ONLY RUNS ONCE.
            //HAVE TO KEEP CLICKING MST BUTTON TO GET THE FULL GRAPH
            //AND THE MIDPOINT KEEPS MOVING
        } while (!Customer.allCustomers.isEmpty());
//end giant do-while MST loop
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked

    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MousePressed
        Customer.allCustomers.clear();
        jPanel1.removeAll();
        jPanel1.revalidate();
        jPanel1.repaint();
        jTextArea1.setText("");

    }//GEN-LAST:event_jButton6MousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MSTform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MSTform().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
